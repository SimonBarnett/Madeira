+ [clubmadeira.io]
+----MAKEUTIL.BAT
+----README.md
+----Wix.py
+----affiliate.md
+----[blueprints]
+------authentication.py
+------blueprints_contents.txt
+------configuration.py
+------data_retrieval.py
+------referral.py
+------role_pages.py
+------site_request.py
+------user_management.py
+------user_settings.py
+------utility.py
+----branding.json
+----checksum.md
+----config.json
+----flask.md
+----has.py
+----madeira.py
+----makeflask.bat
+----pseudo_categories.py
+----referal.htm
+----[siterequest]
+----sms.py
+----[static]
+------[error]
+--------200.md
+--------403.md
+--------404.md
+--------500.md
+------[img]
+------[js]
+--------admin-page.js
+--------category-management.js
+--------common.js
+--------community-page.js
+--------js_contents.txt
+--------merchant-page.js
+--------page-load.js
+--------partner-page.js
+--------site-auth.js
+--------site-navigation.js
+--------site-request.js
+--------user-management.js
+------[old]
+--------admin copy.html
+--------all.js
+--------community copy.html
+--------madeira.py
+--------merchant copy.html
+--------partner.old.html
+------styles.css
+----[templates]
+------admin.html
+------community.html
+------login.html
+------merchant.html
+------my_account.html
+------partner.html
+------signup.html
+------templates_contents.txt
+----test.py
+----test2.py
+----users_settings.json
+----[utils]
+------auth.py
+------categories.py
+------config.py
+------data.py
+------products.py
+------users.py
+------utils_contents.txt
+----velo.clubdiscounts.js
+----velo.md
+----velo.orderplace.js
+----velo.product.js
+----web.config
+----wix2.py
+----wixcat.py

+-has.py
hash_password(plain_password) { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-madeira.py
load_config() { ... }
home() { ... }
admin() { ... }
merchant() { ... }
community() { ... }
wixpro() { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-sms.py
send_sms_textmagic(to_number, message) { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-test.py
check_domain() { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-velo.orderplace.js
callback() { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-Wix.py
fetch_products(limit=100, offset=0, last_numeric_id=None) { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-wix2.py
get_wix_access_token(client_id) { ... }
search_wix_discounted(client_id, collection_id, min_discount_percent=20) { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-wixcat.py
fetch_collections(limit=10, offset=0) { ... }
fetch_products_for_collection(collection_id, limit=10, offset=0) { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-blueprints/authentication.py
login() { ... }
signup_page() { ... }
signup() { ... }
update_password() { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-blueprints/configuration.py
get_config() { ... }
replace_config(affiliate) { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-blueprints/data_retrieval.py
get_categories() { ... }
get_all_discounted_products() { ... }
get_categories() { ... }
get_all_discounted_products() { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-blueprints/referral.py
handle_referral() { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-blueprints/role_pages.py
load_branding_data() { ... }
admin() { ... }
community() { ... }
merchant() { ... }
wixpro() { ... }
get_branding() { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-blueprints/site_request.py
save_site_request_endpoint(user_id) { ... }
list_site_requests() { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-blueprints/user_management.py
get_users() { ... }
get_user(user_id) { ... }
get_permissions(user_id) { ... }
add_permission(user_id) { ... }
remove_permission(user_id) { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-blueprints/user_settings.py
get_user_settings(USERid) { ... }
put_user_settings(USERid) { ... }
patch_user_settings(USERid) { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-blueprints/utility.py
render_md(full_path) { ... }
check_domain() { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-static/js/admin-page.js
initializeAdmin() { ... }
updateUserTable(tableId, users, section) { ... }
createDealRow(product) { ... }
restoreState() { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-static/js/category-management.js
createTreeNode(category, level = 0, isAdmin = false, savedCategories = []) { ... }
createTreeNode(category, level = 0, isAdmin = false, savedCategories = []) { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-static/js/common.js
setupToastr() { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-static/js/community-page.js
initializeCommunity() { ... }
updateMenu() { ... }
updateIntegrationCode(section) { ... }
if((visitDate.getFullYear() { ... }
updateVisitsTable(tableId, visits) { ... }
if((orderDate.getFullYear() { ... }
updateOrdersTable(tableId, orders) { ... }
waitForTinyMCE(callback) { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-static/js/merchant-page.js
initializeMerchant() { ... }
checkAdminPermission() { ... }
createProductRow(product) { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-static/js/page-load.js
showLoadingOverlay() { ... }
attachEventListeners() { ... }
initializePage(requiredPermissions, callback) { ... }
hideLoadingOverlay() { ... }
performPageSetup(pageType, config) { ... }
hideLoadingOverlay() { ... }
performPageSetup(pageType, config) { ... }
hideLoadingOverlay() { ... }
loadBranding(config.brandingType) { ... }
handleSectionClick(event) { ... }
Function(script.innerHTML) { ... }
hideLoadingOverlay() { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-static/js/partner-page.js
initializePartner() { ... }
checkAdminPermission() { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-static/js/site-auth.js
togglePassword(fieldId) { ... }
logOff() { ... }
decodeJWT(token) { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-static/js/site-navigation.js
showSection(sectionId, onSectionLoad = null) { ... }
populateRefererDropdown(refererId) { ... }
loadCategories() { ... }
loadMerchants() { ... }
loadCommunities() { ... }
loadPartners() { ... }
toggleSubmenu(submenuId) { ... }
initializeNavigation() { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-static/js/site-request.js
addPage(type = 'merchant') { ... }
removePage(pageNum, type = 'merchant') { ... }
addEmail(type = 'merchant') { ... }
removeEmail(emailNum, type = 'merchant') { ... }
updateDomainPreview(type = 'merchant') { ... }
initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity') { ... }
getCurrentTimestamp() { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-static/old/all.js
initializeAdmin() { ... }
updateUserTable(tableId, users, section) { ... }
createDealRow(product) { ... }
createTreeNode(category, level = 0, isAdmin = false, savedCategories = []) { ... }
createTreeNode(category, level = 0, isAdmin = false, savedCategories = []) { ... }
setupToastr() { ... }
initializeCommunity() { ... }
updateMenu() { ... }
updateIntegrationCode(section) { ... }
if((visitDate.getFullYear() { ... }
updateVisitsTable(tableId, visits) { ... }
if((orderDate.getFullYear() { ... }
updateOrdersTable(tableId, orders) { ... }
waitForTinyMCE(callback) { ... }
initializeMerchant() { ... }
checkAdminPermission() { ... }
createProductRow(product) { ... }
initializePage(permissionRequired, callback) { ... }
initialize(pageType) { ... }
performPageSetup(pageType, config) { ... }
handleSectionClick(event) { ... }
Function(script.innerHTML) { ... }
Function(script.innerHTML) { ... }
Function(script.innerHTML) { ... }
initializePartner() { ... }
checkAdminPermission() { ... }
togglePassword(fieldId) { ... }
logOff() { ... }
decodeJWT(token) { ... }
showSection(sectionId, onSectionLoad = null) { ... }
populateRefererDropdown(refererId) { ... }
loadCategories() { ... }
loadMerchants() { ... }
loadCommunities() { ... }
loadPartners() { ... }
toggleSubmenu(submenuId) { ... }
addPage(type = 'merchant') { ... }
removePage(pageNum, type = 'merchant') { ... }
addEmail(type = 'merchant') { ... }
removeEmail(emailNum, type = 'merchant') { ... }
updateDomainPreview(type = 'merchant') { ... }
initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity') { ... }
getCurrentTimestamp() { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-static/old/madeira.py
load_config() { ... }
require_permissions(required_permissions, require_all=True) { ... }
decorator(f) { ... }
decorated_function(*args, **kwargs) { ... }
generate_code() { ... }
load_users_categories() { ... }
save_users_categories(users_data) { ... }
get_user_categories(user_id) { ... }
load_users_products() { ... }
fetch_collections(limit=10, offset=0) { ... }
fetch_products_for_collection(collection_id, limit=10, offset=0) { ... }
save_users_products(users_products) { ... }
get_user_products(user_id) { ... }
save_config(config) { ... }
get_amazon_category_title(browse_node_id) { ... }
find_category_recursive(categories, target_id) { ... }
get_immediate_subcategories(parent_id) { ... }
filter_categories_with_products(category_ids, min_discount_percent) { ... }
find_node(categories, target_id) { ... }
find_pseudo_subcategories(parent_id, categories) { ... }
load_users_settings() { ... }
save_users_settings(users_settings) { ... }
get_user_settings(user_id) { ... }
load_site_request(user_id) { ... }
save_site_request(user_id, site_request_data) { ... }
get_amazon_uk_full_details(asins, category) { ... }
get_ebay_uk_full_details(item_ids, category) { ... }
get_awin_uk_full_details(product_ids, category) { ... }
get_cj_uk_full_details(skus, category) { ... }
search_amazon_uk_discounted(browse_node_id, min_discount_percent=20) { ... }
search_ebay_uk_discounted(browse_node_id, min_discount_percent=20) { ... }
search_awin_uk_discounted(browse_node_id, min_discount_percent=20) { ... }
search_cj_uk_discounted(browse_node_id, min_discount_percent=20) { ... }
search_wix_discounted(browse_node_id, min_discount_percent=20) { ... }
fetch_collections(limit=10, offset=0) { ... }
fetch_products_for_collection(collection_id, limit=10, offset=0) { ... }
search_amazon_uk_all(browse_node_id) { ... }
search_ebay_uk_all(browse_node_id) { ... }
search_awin_uk_all(browse_node_id) { ... }
search_cj_uk_all(browse_node_id) { ... }
search_wix_all(browse_node_id) { ... }
fetch_collections(limit=10, offset=0) { ... }
fetch_products_for_collection(collection_id, limit=10, offset=0) { ... }
get_users() { ... }
get_user(user_id) { ... }
get_permissions(user_id) { ... }
add_permission(user_id) { ... }
remove_permission(user_id) { ... }
get_config() { ... }
replace_config(affiliate) { ... }
get_user_settings_endpoint(USERid) { ... }
put_user_settings(USERid) { ... }
patch_user_settings(USERid) { ... }
get_user_categories_endpoint(USERid) { ... }
put_user_categories(USERid) { ... }
patch_user_categories(USERid) { ... }
delete_user_category(USERid) { ... }
get_all_categories() { ... }
get_user_product_list(USERid) { ... }
reduce_product_quantity(USERid, product_id) { ... }
get_all_discounted_products() { ... }
handle_referral() { ... }
update_password() { ... }
reset_password() { ... }
verify_reset_code() { ... }
get_user_visits(USERid) { ... }
get_user_orders(USERid) { ... }
admin() { ... }
community() { ... }
merchant() { ... }
wixpro() { ... }
save_site_request_endpoint(user_id) { ... }
list_site_requests() { ... }
render_md(full_path) { ... }
check_domain() { ... }
home() { ... }
branding() { ... }
login() { ... }
signup_page() { ... }
signup() { ... }
get_user_discounted_products(USERid) { ... }
get_categories(USERid) { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-utils/auth.py
login_required(required_permissions, require_all=True) { ... }
decorator(f) { ... }
decorated_function(*args, **kwargs) { ... }
login_user() { ... }
signup_user() { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-utils/categories.py
get_all_categories(parent_id=None) { ... }
filter_categories_with_products(category_ids, min_discount_percent) { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-utils/config.py
load_config() { ... }
save_config(config) { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-utils/data.py
load_site_request(user_id) { ... }
save_site_request(user_id, site_request_data) { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-utils/products.py
search_all_discounted(category_id) { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()

+-utils/users.py
load_users_settings() { ... }
save_users_settings(users_settings) { ... }
get_user_settings(user_id) { ... }
generate_code() { ... }
has.py
    hash_password(plain_password)
madeira.py
    load_config()
    home()
    admin()
    merchant()
    community()
    wixpro()
sms.py
    send_sms_textmagic(to_number, message)
test.py
    check_domain()
velo.orderplace.js
    callback()
Wix.py
    fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
    get_wix_access_token(client_id)
    search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
    login()
    signup_page()
    signup()
    update_password()
blueprints/configuration.py
    get_config()
    replace_config(affiliate)
blueprints/data_retrieval.py
    get_categories()
    get_all_discounted_products()
    get_categories()
    get_all_discounted_products()
blueprints/referral.py
    handle_referral()
blueprints/role_pages.py
    load_branding_data()
    admin()
    community()
    merchant()
    wixpro()
    get_branding()
blueprints/site_request.py
    save_site_request_endpoint(user_id)
    list_site_requests()
blueprints/user_management.py
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
blueprints/user_settings.py
    get_user_settings(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
blueprints/utility.py
    render_md(full_path)
    check_domain()
static/js/admin-page.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    restoreState()
static/js/category-management.js
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
    setupToastr()
static/js/community-page.js
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
static/js/merchant-page.js
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
static/js/page-load.js
    showLoadingOverlay()
    attachEventListeners()
    initializePage(requiredPermissions, callback)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    performPageSetup(pageType, config)
    hideLoadingOverlay()
    loadBranding(config.brandingType)
    handleSectionClick(event)
    Function(script.innerHTML)
    hideLoadingOverlay()
static/js/partner-page.js
    initializePartner()
    checkAdminPermission()
static/js/site-auth.js
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
static/js/site-navigation.js
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    initializeNavigation()
static/js/site-request.js
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/all.js
    initializeAdmin()
    updateUserTable(tableId, users, section)
    createDealRow(product)
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
    setupToastr()
    initializeCommunity()
    updateMenu()
    updateIntegrationCode(section)
    if((visitDate.getFullYear()
    updateVisitsTable(tableId, visits)
    if((orderDate.getFullYear()
    updateOrdersTable(tableId, orders)
    waitForTinyMCE(callback)
    initializeMerchant()
    checkAdminPermission()
    createProductRow(product)
    initializePage(permissionRequired, callback)
    initialize(pageType)
    performPageSetup(pageType, config)
    handleSectionClick(event)
    Function(script.innerHTML)
    Function(script.innerHTML)
    Function(script.innerHTML)
    initializePartner()
    checkAdminPermission()
    togglePassword(fieldId)
    logOff()
    decodeJWT(token)
    showSection(sectionId, onSectionLoad = null)
    populateRefererDropdown(refererId)
    loadCategories()
    loadMerchants()
    loadCommunities()
    loadPartners()
    toggleSubmenu(submenuId)
    addPage(type = 'merchant')
    removePage(pageNum, type = 'merchant')
    addEmail(type = 'merchant')
    removeEmail(emailNum, type = 'merchant')
    updateDomainPreview(type = 'merchant')
    initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
    getCurrentTimestamp()
static/old/madeira.py
    load_config()
    require_permissions(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    generate_code()
    load_users_categories()
    save_users_categories(users_data)
    get_user_categories(user_id)
    load_users_products()
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    save_users_products(users_products)
    get_user_products(user_id)
    save_config(config)
    get_amazon_category_title(browse_node_id)
    find_category_recursive(categories, target_id)
    get_immediate_subcategories(parent_id)
    filter_categories_with_products(category_ids, min_discount_percent)
    find_node(categories, target_id)
    find_pseudo_subcategories(parent_id, categories)
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
    get_amazon_uk_full_details(asins, category)
    get_ebay_uk_full_details(item_ids, category)
    get_awin_uk_full_details(product_ids, category)
    get_cj_uk_full_details(skus, category)
    search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
    search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
    search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
    search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
    search_wix_discounted(browse_node_id, min_discount_percent=20)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    search_amazon_uk_all(browse_node_id)
    search_ebay_uk_all(browse_node_id)
    search_awin_uk_all(browse_node_id)
    search_cj_uk_all(browse_node_id)
    search_wix_all(browse_node_id)
    fetch_collections(limit=10, offset=0)
    fetch_products_for_collection(collection_id, limit=10, offset=0)
    get_users()
    get_user(user_id)
    get_permissions(user_id)
    add_permission(user_id)
    remove_permission(user_id)
    get_config()
    replace_config(affiliate)
    get_user_settings_endpoint(USERid)
    put_user_settings(USERid)
    patch_user_settings(USERid)
    get_user_categories_endpoint(USERid)
    put_user_categories(USERid)
    patch_user_categories(USERid)
    delete_user_category(USERid)
    get_all_categories()
    get_user_product_list(USERid)
    reduce_product_quantity(USERid, product_id)
    get_all_discounted_products()
    handle_referral()
    update_password()
    reset_password()
    verify_reset_code()
    get_user_visits(USERid)
    get_user_orders(USERid)
    admin()
    community()
    merchant()
    wixpro()
    save_site_request_endpoint(user_id)
    list_site_requests()
    render_md(full_path)
    check_domain()
    home()
    branding()
    login()
    signup_page()
    signup()
    get_user_discounted_products(USERid)
    get_categories(USERid)
utils/auth.py
    login_required(required_permissions, require_all=True)
    decorator(f)
    decorated_function(*args, **kwargs)
    login_user()
    signup_user()
utils/categories.py
    get_all_categories(parent_id=None)
    filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
    load_config()
    save_config(config)
utils/data.py
    load_site_request(user_id)
    save_site_request(user_id, site_request_data)
utils/products.py
    search_all_discounted(category_id)
utils/users.py
    load_users_settings()
    save_users_settings(users_settings)
    get_user_settings(user_id)
    generate_code()



has.py
hash_password(plain_password)
madeira.py
load_config()
home()
admin()
merchant()
community()
wixpro()
sms.py
send_sms_textmagic(to_number, message)
test.py
check_domain()
velo.orderplace.js
callback()
Wix.py
fetch_products(limit=100, offset=0, last_numeric_id=None)
wix2.py
get_wix_access_token(client_id)
search_wix_discounted(client_id, collection_id, min_discount_percent=20)
wixcat.py
fetch_collections(limit=10, offset=0)
fetch_products_for_collection(collection_id, limit=10, offset=0)
blueprints/authentication.py
login()
signup_page()
signup()
update_password()
blueprints/configuration.py
get_config()
replace_config(affiliate)
blueprints/data_retrieval.py
get_categories()
get_all_discounted_products()
get_categories()
get_all_discounted_products()
blueprints/referral.py
handle_referral()
blueprints/role_pages.py
load_branding_data()
admin()
community()
merchant()
wixpro()
get_branding()
blueprints/site_request.py
save_site_request_endpoint(user_id)
list_site_requests()
blueprints/user_management.py
get_users()
get_user(user_id)
get_permissions(user_id)
add_permission(user_id)
remove_permission(user_id)
blueprints/user_settings.py
get_user_settings(USERid)
put_user_settings(USERid)
patch_user_settings(USERid)
blueprints/utility.py
render_md(full_path)
check_domain()
static/js/admin-page.js
initializeAdmin()
updateUserTable(tableId, users, section)
createDealRow(product)
restoreState()
static/js/category-management.js
createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
static/js/common.js
setupToastr()
static/js/community-page.js
initializeCommunity()
updateMenu()
updateIntegrationCode(section)
if((visitDate.getFullYear()
updateVisitsTable(tableId, visits)
if((orderDate.getFullYear()
updateOrdersTable(tableId, orders)
waitForTinyMCE(callback)
static/js/merchant-page.js
initializeMerchant()
checkAdminPermission()
createProductRow(product)
static/js/page-load.js
showLoadingOverlay()
attachEventListeners()
initializePage(requiredPermissions, callback)
hideLoadingOverlay()
performPageSetup(pageType, config)
hideLoadingOverlay()
performPageSetup(pageType, config)
hideLoadingOverlay()
loadBranding(config.brandingType)
handleSectionClick(event)
Function(script.innerHTML)
hideLoadingOverlay()
static/js/partner-page.js
initializePartner()
checkAdminPermission()
static/js/site-auth.js
togglePassword(fieldId)
logOff()
decodeJWT(token)
static/js/site-navigation.js
showSection(sectionId, onSectionLoad = null)
populateRefererDropdown(refererId)
loadCategories()
loadMerchants()
loadCommunities()
loadPartners()
toggleSubmenu(submenuId)
initializeNavigation()
static/js/site-request.js
addPage(type = 'merchant')
removePage(pageNum, type = 'merchant')
addEmail(type = 'merchant')
removeEmail(emailNum, type = 'merchant')
updateDomainPreview(type = 'merchant')
initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
getCurrentTimestamp()
static/old/all.js
initializeAdmin()
updateUserTable(tableId, users, section)
createDealRow(product)
createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
createTreeNode(category, level = 0, isAdmin = false, savedCategories = [])
setupToastr()
initializeCommunity()
updateMenu()
updateIntegrationCode(section)
if((visitDate.getFullYear()
updateVisitsTable(tableId, visits)
if((orderDate.getFullYear()
updateOrdersTable(tableId, orders)
waitForTinyMCE(callback)
initializeMerchant()
checkAdminPermission()
createProductRow(product)
initializePage(permissionRequired, callback)
initialize(pageType)
performPageSetup(pageType, config)
handleSectionClick(event)
Function(script.innerHTML)
Function(script.innerHTML)
Function(script.innerHTML)
initializePartner()
checkAdminPermission()
togglePassword(fieldId)
logOff()
decodeJWT(token)
showSection(sectionId, onSectionLoad = null)
populateRefererDropdown(refererId)
loadCategories()
loadMerchants()
loadCommunities()
loadPartners()
toggleSubmenu(submenuId)
addPage(type = 'merchant')
removePage(pageNum, type = 'merchant')
addEmail(type = 'merchant')
removeEmail(emailNum, type = 'merchant')
updateDomainPreview(type = 'merchant')
initializeTinyMCE(selector = 'textarea[name$="Content"], #aboutStore, #aboutCommunity')
getCurrentTimestamp()
static/old/madeira.py
load_config()
require_permissions(required_permissions, require_all=True)
decorator(f)
decorated_function(*args, **kwargs)
generate_code()
load_users_categories()
save_users_categories(users_data)
get_user_categories(user_id)
load_users_products()
fetch_collections(limit=10, offset=0)
fetch_products_for_collection(collection_id, limit=10, offset=0)
save_users_products(users_products)
get_user_products(user_id)
save_config(config)
get_amazon_category_title(browse_node_id)
find_category_recursive(categories, target_id)
get_immediate_subcategories(parent_id)
filter_categories_with_products(category_ids, min_discount_percent)
find_node(categories, target_id)
find_pseudo_subcategories(parent_id, categories)
load_users_settings()
save_users_settings(users_settings)
get_user_settings(user_id)
load_site_request(user_id)
save_site_request(user_id, site_request_data)
get_amazon_uk_full_details(asins, category)
get_ebay_uk_full_details(item_ids, category)
get_awin_uk_full_details(product_ids, category)
get_cj_uk_full_details(skus, category)
search_amazon_uk_discounted(browse_node_id, min_discount_percent=20)
search_ebay_uk_discounted(browse_node_id, min_discount_percent=20)
search_awin_uk_discounted(browse_node_id, min_discount_percent=20)
search_cj_uk_discounted(browse_node_id, min_discount_percent=20)
search_wix_discounted(browse_node_id, min_discount_percent=20)
fetch_collections(limit=10, offset=0)
fetch_products_for_collection(collection_id, limit=10, offset=0)
search_amazon_uk_all(browse_node_id)
search_ebay_uk_all(browse_node_id)
search_awin_uk_all(browse_node_id)
search_cj_uk_all(browse_node_id)
search_wix_all(browse_node_id)
fetch_collections(limit=10, offset=0)
fetch_products_for_collection(collection_id, limit=10, offset=0)
get_users()
get_user(user_id)
get_permissions(user_id)
add_permission(user_id)
remove_permission(user_id)
get_config()
replace_config(affiliate)
get_user_settings_endpoint(USERid)
put_user_settings(USERid)
patch_user_settings(USERid)
get_user_categories_endpoint(USERid)
put_user_categories(USERid)
patch_user_categories(USERid)
delete_user_category(USERid)
get_all_categories()
get_user_product_list(USERid)
reduce_product_quantity(USERid, product_id)
get_all_discounted_products()
handle_referral()
update_password()
reset_password()
verify_reset_code()
get_user_visits(USERid)
get_user_orders(USERid)
admin()
community()
merchant()
wixpro()
save_site_request_endpoint(user_id)
list_site_requests()
render_md(full_path)
check_domain()
home()
branding()
login()
signup_page()
signup()
get_user_discounted_products(USERid)
get_categories(USERid)
utils/auth.py
login_required(required_permissions, require_all=True)
decorator(f)
decorated_function(*args, **kwargs)
login_user()
signup_user()
utils/categories.py
get_all_categories(parent_id=None)
filter_categories_with_products(category_ids, min_discount_percent)
utils/config.py
load_config()
save_config(config)
utils/data.py
load_site_request(user_id)
save_site_request(user_id, site_request_data)
utils/products.py
search_all_discounted(category_id)
utils/users.py
load_users_settings()
save_users_settings(users_settings)
get_user_settings(user_id)
generate_code()
